# This file is a valid configuration file augmented for testing purpose.
#
# It demonstrats all the possible configuration cases while being part of the
# test suite. See config.TestConfigParseAll.
#
# In most cases, only `from` if fully specified, since both `from` and `to` are
# parsed _exactly_ the same way.
#
# The default is fixed to avoid embiguity.
# It corresponds also to the current repo.
#
# See ./all-cases-no-defaults.yaml for the same links without default values.
# See ./templates.yaml for template examples.
# See ./functions.yaml for functions examples.
defaults:
  link:
    from:
      owner: from_owner
      repo: from_repo
    to:
      owner: to_owner
      repo: to_repo

links:
  # wants nothing
  -

  # Various ways to specify a `from` and `to`.
  # If unspecified, the `to` inherit information from `from` and the defaults.

  # want: from_owner/from_repo:a.txt@ -> to_owner/to_repo:a.txt@
  - from: a.txt

  # want: from_owner/from_repo:a.txt@ref -> to_owner/to_repo:a.txt@
  - from: a.txt@ref

  # want: own/rep:a.txt@ref -> to_owner/to_repo:a.txt@
  - from: own/rep:a.txt@ref

  # want: own/rep:a.txt@ref -> to_owner/to_repo:a.txt@
  - from: https://github.com/own/rep/blob/ref/a.txt

  # want: own/rep:a.txt@ref -> to_owner/to_repo:a.txt@
  - from: own/rep/blob/ref/a.txt

  # want: own/rep:a.txt@ref -> to_owner/to_repo:a.txt@
  - from:
      repo: own/rep
      path: a.txt
      ref: ref

  # want: own/rep:a.txt@ref -> to_owner/to_repo:a.txt@
  - from:
      owner: own
      repo: rep
      path: a.txt
      ref: ref

  # want: from_owner/from_repo:a.txt@ -> to_owner/to_repo:a.txt@
  # want: from_owner/from_repo:b.txt@ -> to_owner/to_repo:b.txt@
  # want: from_owner/from_repo:c.txt@ -> to_owner/to_repo:c.txt@
  - from:
      - a.txt
      - b.txt
      - c.txt

  # From here, we specify the `to`

  # want: from_owner/from_repo:a.txt@ -> to_owner/to_repo:b.txt@
  - from: a.txt
    to: b.txt

  # want: from_owner/from_repo:a.txt@ -> own/rep:a.txt@
  - from: a.txt
    # needs quotes, because YAML wants to read the second : as a mapping.
    to: "own/rep:"

  # want: from_owner/from_repo:a.txt@ -> own/rep:a.txt@
  - from: a.txt
    to: "own/rep:"

  # want: from_owner/from_repo:a.txt@ -> own/rep:a.txt@
  # want: from_owner/from_repo:b.txt@ -> own/rep:b.txt@
  # want: from_owner/from_repo:c.txt@ -> own/rep:c.txt@
  - from:
      - a.txt
      - b.txt
      - c.txt
    to: "own/rep:"

  # TODO: this is not yet supported
  # # want: from_owner/from_repo:a.txt@ -> owner/to_repo:a.txt@
  # # want: from_owner/from_repo:b.txt@ -> owner/to_repo:b.txt@
  # - from: *.txt
